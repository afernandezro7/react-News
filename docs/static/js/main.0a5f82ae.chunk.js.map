{"version":3,"sources":["hooks/useSelect.js","components/Formulario.js","components/Header.js","components/Noticia.js","components/ListadoNoticias.js","App.js","serviceWorker.js","index.js","components/Formulario.module.css"],"names":["useSelect","initialState","options","useState","state","setstate","handleChange","target","value","className","style","marginBottom","onChange","map","name","key","Formulario","setCategoria","setPais","categoría","SelectNoticias","pais","SelectPais","styles","buscador","onSubmit","e","preventDefault","heading","type","Header","title","href","Noticia","noticia","source","description","url","urlToImage","src","alt","rel","ListadoNoticias","noticias","App","categoria","setNoticias","useEffect","a","encodeURI","fetch","respuesta","json","articles","consultarAPI","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.0a5f82ae.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst useSelect = (initialState, options) => {\r\n    \r\n    const [state, setstate] = useState(initialState)\r\n\r\n    const handleChange = ( {target} )=>{\r\n        setstate(\r\n            target.value\r\n        )\r\n    } \r\n\r\n    const SelectNoticias = ()=>(\r\n        <select\r\n            className=\"browser-default \"\r\n            style={{marginBottom: 1 +'rem'}}\r\n            value={ state }\r\n            onChange={ handleChange }\r\n\r\n        >\r\n            \r\n            \r\n            {\r\n                options.map( ({name,value}) =>(\r\n                    <option value={value} key={value}>{name}</option>)\r\n                )\r\n            \r\n            }\r\n\r\n        </select>\r\n    )\r\n\r\n    return [state, SelectNoticias];\r\n}\r\n\r\n\r\n\r\nexport default useSelect\r\n","import React from 'react'\r\nimport useSelect from '../hooks/useSelect';\r\nimport styles from './Formulario.module.css';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Formulario = ({setCategoria,setPais}) => {\r\n\r\n    //Crear Opciones para la categorias de noticia\r\n    const opcionesNews = [\r\n        {name:'Negocios',value:'business'},\r\n        {name:'Entretenimiento',value:'entertainment'},\r\n        {name:'General',value:'general'},\r\n        {name:'Salud',value:'health'},\r\n        {name:'Ciencia',value:'science'},\r\n        {name:'Deportes',value:'sports'},\r\n        {name:'Tecnología',value:'technology'}       \r\n    ]\r\n\r\n    const opcionesPais = [\r\n        {name:'EEUU',value:'us'},\r\n        {name:'Argentina',value:'ar'},\r\n        {name:'Colombia',value:'co'},\r\n        {name:'Cuba',value:'cu'},\r\n        {name:'Rusia',value:'ru'},\r\n        {name:'Irlanda',value:'ie'},\r\n        {name:'Japón',value:'jp'}       \r\n    ]\r\n\r\n\r\n\r\n    // utilizar custom Hook\r\n    const [categoría, SelectNoticias] = useSelect('general', opcionesNews)\r\n    const [pais, SelectPais] = useSelect('us', opcionesPais)\r\n\r\n\r\n\r\n    // Manejar el submit del form\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        \r\n        // Enviar datos al componente principal\r\n        setCategoria(categoría)       \r\n        setPais(pais)\r\n        \r\n    }\r\n\r\n    return (\r\n        <div \r\n            className={`${styles.buscador} row`}     \r\n        >\r\n            <div className=\"col s12 m8 offset-m2\">\r\n                <form \r\n                    onSubmit = { handleSubmit }\r\n                >\r\n                \r\n                    <h2 \r\n                        className={ styles.heading }\r\n                    >\r\n                        Encuentra Noticias por Categoría\r\n                    </h2>\r\n\r\n                    <SelectNoticias />\r\n                    <SelectPais/>\r\n\r\n                    <div className=\"input-field col s12\">\r\n                        <input\r\n                            type=\"submit\"\r\n                            className={`${styles['btn-block']} btn-large amber darken-2`} \r\n                            value=\"Buscar\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nFormulario.propTypes = {\r\n    setCategoria: PropTypes.func.isRequired,\r\n    setPais: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Header = ( {title} ) => {\r\n    return (\r\n        <nav className=\"nav-wrapper light-blue darken-3\">\r\n            <a \r\n                href=\"#!\" \r\n                className=\"brand-logo center\"\r\n            >\r\n                { title }\r\n            </a>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Noticia = ({noticia}) => {\r\n\r\n    //extraer los datos\r\n    const {title , source , description, url , urlToImage}= noticia;\r\n\r\n    return (\r\n        <div className=\"col s12 m6 l4\">\r\n            <div className=\"card\">\r\n                <div className=\"card-image\">\r\n                    <img \r\n                        src={ (urlToImage!==null)? urlToImage: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRsyP_nTkQN-lY7ZL6FisXW5OCmAcVFjpaY4g&usqp=CAU'}\r\n                        alt={title}\r\n                    />\r\n                    <span className=\"card-title\">{ source.name }</span>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <h5>{title}</h5>\r\n                    <p>{description}</p>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                    <a \r\n                        href={url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"waves-effect waves-light btn\"\r\n                    >\r\n                        Ver Noticia Completa\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nNoticia.propTypes = {\r\n    noticia: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Noticia\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Noticia from './Noticia'\r\n\r\nconst ListadoNoticias = ({noticias}) => {\r\n    return (\r\n        <div className=\"row\">\r\n           {\r\n               noticias.map( noticia =>(\r\n                   <Noticia\r\n                       key={noticia.url}\r\n                       noticia={noticia}\r\n                   />\r\n               ) )\r\n           } \r\n        </div>\r\n    )\r\n}\r\n\r\nListadoNoticias.propTypes = {\r\n    noticias: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ListadoNoticias\r\n","import React, { useEffect, useState } from 'react';\nimport Formulario from './components/Formulario';\nimport Header from './components/Header';\nimport ListadoNoticias from './components/ListadoNoticias';\n\nfunction App() {\n\n  // Definir state de categoría y pais que va a recibir los datos del formulario\n  const [categoria, setCategoria] = useState('');\n  const [pais, setPais] = useState('')\n\n  //Definir state de noticias\n  const [noticias, setNoticias] = useState([])\n\n  //Consultar api cuando el state de pais y categorias cambian\n  useEffect(() => {\n    \n    if(categoria===''|| pais ==='') return;\n\n    const consultarAPI = async()=>{\n\n      const apikey = '6b0210adc67f4755afb9e3e358541478'  \n      const url = `https://newsapi.org/v2/top-headlines?category=${encodeURI(categoria)}&country=${encodeURI(pais)}&apiKey=${ encodeURI(apikey) }`;\n      const respuesta = await fetch(url);\n      const {articles} = await respuesta.json(respuesta);\n\n      \n      setNoticias(articles)\n\n    \n    }\n\n    consultarAPI()\n\n\n\n  }, [categoria , pais])\n\n\n\n\n\n\n  return (\n    <>\n      <Header\n        title='Buscador de Noticias'\n      />\n\n      <div className=\"container white\">\n        <Formulario\n          setCategoria={setCategoria}\n          setPais={setPais}\n        />\n        \n        <ListadoNoticias\n\n          noticias={noticias}\n        />\n      </div>\n      \n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Formulario_heading__21D29\",\"buscador\":\"Formulario_buscador__wd5-v\",\"btn-block\":\"Formulario_btn-block__3XlQ4\"};"],"sourceRoot":""}